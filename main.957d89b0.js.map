{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","BASE_URL","request","url","fetch","getAllId","then","res","json","result","map","phone","id","getFirstReceivedDetails","Promise","race","getAllSuccessfulDetails","allSuccessfulArr","allSettled","getThreeFastestDetails","arr","threeFastestArr","resolve","resArr","i","length","clone","push","createContainer","data","divClass","textContent","div","createElement","h3","phoneArr","concat","className","append","insertAdjacentHTML","name","prepend","firstRecive","allSuccsses","results","filter","status","value","threeFastest"],"mappings":"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","file":"main.957d89b0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst BASE_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\nconst request = (url) => {\n  return fetch(`${BASE_URL}${url}`);\n};\n\nfunction getAllId() {\n  // eslint-disable-next-line max-len\n  return fetch(`https://mate-academy.github.io/phone-catalogue-static/api/phones.json`)\n    .then(res => res.json()).then(result => {\n      const res = result.map(phone => phone.id);\n\n      return res;\n    });\n}\n\nfunction getFirstReceivedDetails() {\n  return getAllId().then(res => res.map(id => request(`${id}.json`)))\n    .then(res => Promise.race(res)).then(phone => phone.json());\n}\n\nfunction getAllSuccessfulDetails() {\n  return getAllId().then(res => res.map(id => request(`${id}.json`)\n    .then(result => result.json())))\n    .then(allSuccessfulArr => Promise.allSettled(allSuccessfulArr));\n}\n\nfunction getThreeFastestDetails() {\n  return getAllId().then(arr => arr.map(id => request(`${id}.json`)))\n    .then(threeFastestArr => {\n      return new Promise((resolve) => {\n        const resArr = [];\n\n        for (let i = 0; i < threeFastestArr.length; i++) {\n          Promise.race(threeFastestArr).then(result => result.clone()\n            .json()).then(res => {\n            if (resArr.length < 3) {\n              resArr.push(res);\n            } else if (resArr.length === 3) {\n              resolve(resArr);\n            }\n          });\n        }\n      });\n    }).then(res => Promise.allSettled(res));\n}\n\nfunction createContainer(data, divClass, textContent) {\n  const div = document.createElement('div');\n  const h3 = document.createElement('h3');\n  const phoneArr = [].concat(data);\n\n  div.className = divClass;\n  h3.textContent = textContent;\n  div.append(h3);\n\n  for (const phone of phoneArr) {\n    div.insertAdjacentHTML('beforeend', `\n  <ul>\n    <li>${phone.id}</li>\n    <li>${phone.name}</li>\n  </ul>\n  `);\n  }\n  body.prepend(div);\n}\n\nconst firstRecive = getFirstReceivedDetails();\nconst allSuccsses = getAllSuccessfulDetails()\n  .then(results => results.filter(res => res.status === 'fulfilled')\n    .map(res => res.value));\nconst threeFastest = getThreeFastestDetails()\n  .then(results => results.map(res => res.value));\n\nfirstRecive\n  .then(res => createContainer(res, 'first-received', 'First Received'));\n\nallSuccsses\n  .then(res => createContainer(res, 'all-successful', 'All Successful'));\n\nthreeFastest.then(res => createContainer(res, 'three-first', 'Three Fastest'));\n"]}